@page "/"
@using DbConnection.Entities
@using DbConnection.Repositories

<TextEdit Placeholder="Suche..." TextChanged="@handleSearch" Margin="Margin.Is2.OnY"/>
<Table>
    <TableHeader>
        <TableRow>
            <TableHeaderCell>Id</TableHeaderCell>
            <TableHeaderCell>Vorname</TableHeaderCell>
            <TableHeaderCell>Nachname</TableHeaderCell>
            <TableHeaderCell>Adresszeile 1</TableHeaderCell>
            <TableHeaderCell>Adresszeile 2</TableHeaderCell>
            <TableHeaderCell>Unternehmen</TableHeaderCell>
            <TableHeaderCell>Produktgruppen</TableHeaderCell>
        </TableRow>
    </TableHeader>
    <TableBody>
        @foreach(var kunde in filteredKunden)
        {
            <TableRow>
                <TableRowHeader>@kunde.Id</TableRowHeader>
                <TableRowCell>@kunde.Vorname</TableRowCell>
                <TableRowCell>@kunde.Nachname</TableRowCell>
                <TableRowCell>@kunde.Adress1</TableRowCell>
                <TableRowCell>@kunde.Adress2</TableRowCell>
                <TableRowCell>@kunde.Unternehmen?.Name</TableRowCell>
                <TableRowCell>@(string.Join(", ", kunde.Produktgruppen.Select(x => x.Name)))</TableRowCell>
            </TableRow>
        }
    </TableBody>
</Table>
@code {
    private List<Kunde> kunden;
    private List<Kunde> filteredKunden;

    private void handleSearch(string value)
    {
        if (string.IsNullOrEmpty(value)) filteredKunden = kunden;
        var query = value.ToLower();
        filteredKunden = kunden.Where(x => x.Nachname.ToLower().StartsWith(query)).ToList();
    }

    protected override async Task OnInitializedAsync()
    {
        kunden = KundenRepository.GetAll();
        filteredKunden = kunden;
    }
}